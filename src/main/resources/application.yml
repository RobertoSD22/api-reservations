management:
  info: #Está sección se encarga de exponer información personalizada en el endpoint info
    env:
      enabled: true #Habilita la exposición de información del entorno
  endpoint:
    health:
      show-details: always #Muestra los detalles de la información de salud
  endpoints:
    web:
      base-path: / #Aquí se define el contexto de los endpoints de actuator
      exposure:
        include: '*' #Aquí se definen los endpoints que se expondrán
server:
    port: 8081 #Aquí se define el puerto en el que se ejecutará la aplicación
    compression:
        enabled: true #Habilita la compresión de las respuestas
        min-response-size: 2048 #Aquí se define el tamaño mínimo de la respuesta para que se comprima
        mime-types: application/json, application/xml, text/html, text/plain #Aquí se definen los tipos de contenido que se comprimirán
    servlet:
      context-path: /api #Aquí se define el contexto de la aplicación

info: #Aqui se definen las propiedades personalizadas que se expondrán en el endpoint info NOTA: Las propiedades provienen del archivo pom.xml
  application:
    groupId: '@project.groupId@'
    artifactId: '@project.artifactId@'
    version: '@project.version@'
    name: '@project.name@'
    description: '@project.description@'

http-connector:
  hosts:
    api-catalog:
      host: localhost #Aquí se define el host del servicio api-catalog (El servicio del profesor)
      port: 6070 #Aquí se define el puerto del servicio api-catalog
      endpoints:
        get-city:
          protocol: http #Aquí se define el protocolo de comunicación
          url: "/api/flights/catalog/city/{code}"
          connectionTimeout: 1000 #Tiempo de espera de conexión con el servicio
          readTimeout: 1000 #Es en milisegundos (seria 1 segundo). Tiempo de espera de comunicación con el servicio
          writeTimeout: 1000 #Tiempo que se tarda en responder el servicio




